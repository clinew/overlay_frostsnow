#!/bin/bash

# Script to backup a Minetest server.  Note that this script simply creates a
# single backup and overwrites it on each use.  Another program must be used to
# store and rotate said backup for posterity.
#
# Copyright (C) 2019  Wade T. Cline
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) version 3 of the License.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License along
# with this program; if not, write to the Free Software Foundation, Inc.,
# 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.

# Print a usage message with an optional error message and exit the program.
SERVICE_DEFAULT="minetest-server"
HOMEDIR_DEFAULT="/var/lib/minetest"
usage_print() {
	if [ $# -gt 0 ]; then
		echo "ERROR: $1."
		echo ""
	fi
	echo "USAGE: $0 [SERVICE] [HOMEDIR]"
	echo -e "\tSERVICE: Service name according to OpenRC (default: '${SERVICE_DEFAULT}')"
	echo -e "\tHOMEDIR: Home directory of Minetest user (default: '${HOMEDIR_DEFAULT}')"
	if [ $# -gt 0 ]; then
		exit 1
	fi
	exit 0
}

# Parse arguments.
if [ $# -gt 2 ]; then
	usage_print "Too many arguments"
elif [ $# -gt 0 ]; then
	if [ "$1" == "-h" -o "$1" == "--help" ]; then
		usage_print
	fi
fi
SERVICE=${1:-"${SERVICE_DEFAULT}"}
HOMEDIR=${2:-"${HOMEDIR_DEFAULT}"}

# Validate arguments.
if [ ! -f "/etc/init.d/${SERVICE}" ]; then
	usage_print "No such service '${SERVICE}'"
elif [ ! -d "${HOMEDIR}/.minetest" ]; then
	usage_print "Could not find Minetest directory at '${HOMEDIR}/.minetest'"
fi

# Prepare to execute.
echo "Backing up Minetest service '${SERVICE}' with home directory '${HOMEDIR}'"
set -ex

# Clean existing backup.
rm -rf "${HOMEDIR}"/backup.tar{,.bz2}

# Stop the server.
rc-service ${SERVICE} stop

# Create the backup.
tar -cvf "${HOMEDIR}/backup.tar" "${HOMEDIR}/.minetest"

# Restart the server.
rc-service ${SERVICE} start

# Compress the backup.
bzip2 "${HOMEDIR}/backup.tar"
chown mtbackup:mtbackup "${HOMEDIR}/backup.tar.bz2"
